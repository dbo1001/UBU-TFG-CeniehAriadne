name: Build and Deploy to GKE

on:
  push:
    branches:
    - develop
    paths-ignore:
    - 'docs/**'
    
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: omeka  
  GKE_ZONE: europe-west6-c
  IMAGE: gke-omeka
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  IMAP_HOST: ${{ secrets.IMAP_HOST }}
  IMAP_USERNAME: ${{ secrets.IMAP_USERNAME}}
  IMAP_PASSWORD: ${{ secrets.IMAP_PASSWORD }}
  IMAP_PORT: ${{ secrets.IMAP_PORT }}
  IMAP_SSL: ${{ secrets.IMAP_SSL }}
  SNMP_HOST: ${{ secrets.SNMP_HOST }}
  SNMP_USERNAME: ${{ secrets.SNMP_USERNAME}}
  SNMP_PASSWORD: ${{ secrets.SNMP_PASSWORD }}
  SNMP_PORT: ${{ secrets.SNMP_PORT }}
  SNMP_SSL: ${{ secrets.SNMP_SSL }}
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:latest" \
          .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
        docker push "gcr.io/$PROJECT_ID/$IMAGE:latest"
    - name: Delete old secrets
      run: |-
        kubectl delete secret omeka-db
        kubectl delete secret omeka-imap
        kubectl delete secret omeka-snmp
    - name: Create new secrets
      run: |-
        kubectl create secret generic omeka-db \
        --from-literal=user-password=$DB_PASSWORD \
        --from-literal=root-password=$DB_ROOT_PASSWORD \
        --from-literal=username=$DB_USERNAME \
        --from-literal=database=$DB_DATABASE
        kubectl create secret generic omeka-imap \
        --from-literal=host=$IMAP_HOST \
        --from-literal=username=$IMAP_USERNAME \
        --from-literal=password=$IMAP_PASSWORD \
        --from-literal=port=$IMAP_PORT
        --from-literal=ssl=$IMAP_SSL
        kubectl create secret generic omeka-snmp \
        --from-literal=host=$SNMP_HOST \
        --from-literal=username=$SNMP_USERNAME \
        --from-literal=password=$SNMP_PASSWORD \
        --from-literal=port=$SNMP_PORT
        --from-literal=ssl=$SNMP_SSL
    - name: Delete old configMaps
      run: |-    
        kubectl delete configmap db-config
        kubectl delete configmap imap-config
        kubectl delete configmap snmp-config
    - name: Create new configMaps
      run: |-    
        kubectl create configmap db-config \
        --from-file ./configFiles/db.ini
        kubectl create configmap imap-config \
        --from-file ./configFiles/imap.ini
        kubectl create configmap snmp-config \
        --from-file ./configFiles/config.ini.modificar
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker images to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment.apps/$IMAGE
        kubectl get services -o wide



